[DEFAULT]

# The subnet scope to use on APIC if no other constraint
# has been explicitly specified. Valid values are
# public, private or deny.
# public -> Subnet will be advertised externally
# private -> Subnet is private to VRF
# deny -> Disallow creation of subnet
# subnet_scope = public|private|deny


# Tenant (project) specific constraints and network specific
# constraints are described in sections of their own.
#
# A tenant section looks like:
# [tenant-name]
# ...
#
# A network section looks like:
# [tenant-name/network-name]
# ...
#
# Network-specific constraints, when specified, take preference over
# tenant-specific constraints.

# Both sections may have the following configuration keys:
# deny -> Comma-separated list of CIDRs. If the requested
#         subnet overlaps with a deny CIDR, then creation of
#         the subnet is disallowed.
# private -> Comma-separated list of CIDRs. If the requested
#           subnet is contained within a private CIDR, then
#           the subnet will be created with 'private' scope
#           (i.e. private to the corresponding VRF).
# public -> Comma-separated list of CIDRs. If the requested
#           subnet is contained within a public CIDR, then
#           the subnet will be created with 'public' scope
#           (i.e. advertised externally).
# default -> The scope to use if the subnet does not match
#            any of the explicitly specified CIDRs. Valid
#            values are public, private or deny.
#
# When deciding subnet scope, the order of preference is deny,
# private, public. Thus if the requested subnet is present in
# both private and public CIDRs, the scope used will be private.
#
# Example:
#
# [tenant1/network1]
# public = 10.10.10.0/24, 10.10.20.0/28
# deny = 30.10.0.0/16
# default = private
#
# [tenant1]
# private = 50.50.50.0/26
# default = deny
#
#
# We also use this same file to enforce the secure port binding
# regex rules against certain APIC vrf. A vrf section looks like:
# [APIC-tenant-name/APIC-vrf-name]
# allow_vm_names = <regex1>, <regex2>, ...
#
# Example:
#
# [_openstack1_coke/_openstack1_shared]
# allow_vm_names = secure_vm*, safe_vm*
